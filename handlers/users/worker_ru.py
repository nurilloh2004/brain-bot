from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery, InputFile, ContentType
from loader import dp
from states.workerData_ru import WorkerData_ru
from keyboards.default.branch import branch_key_ru
from keyboards.default.position import position_key_ru
from keyboards.default.menu import about_ru
from keyboards.inline.confirm import confirmation_keyboard_ru
from keyboards.default.contact import contact_key_ru
from keyboards.default.menu import menu
from keyboards.default.back import back_key_ru
from aiogram.dispatcher import filters
from aiogram.types import Message, CallbackQuery
from keyboards.default.branch_position import branch_position_key_ru

from data.config import ADMINS, CHANNELS
from keyboards.inline.confirm import confirmation_keyboard_ru, post_callback

PHONE_NUM = r'^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$'


@dp.message_handler(text="ü§µ‚Äç‚ôÇÔ∏è –î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
async def worker_menu(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö', reply_markup=branch_position_key_ru)

@dp.message_handler(text='–°–º–µ–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–¥–µ–ª–µ–Ω–∏—è')
async def enter_name(message: types.Message):
    await message.answer("üôé‚Äç‚ôÇÔ∏è –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è !", reply_markup=back_key_ru)
    await WorkerData_ru.name.set()

@dp.message_handler(state=WorkerData_ru.name)
async def worker_name(message: types.Message, state: FSMContext):
    name = message.text

    await state.update_data(
        {"name": name}
    )
    await message.answer("üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: –ö–ö.–û–û.–ì–ì–ì–ì (13.12.1997):", reply_markup=back_key_ru)
    await WorkerData_ru.next()

@dp.message_handler(state=WorkerData_ru.birth_date)
async def worker_birth(message: Message, state: FSMContext):
    birth_date = message.text
    await state.update_data(
        {
            "birth_date": birth_date
        }
    )
    await message.answer('üìû –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ + 998xxxxxxxxx:',reply_markup=contact_key_ru)
    await WorkerData_ru.next()


@dp.message_handler(state=WorkerData_ru.phonenum, content_types='contact')
async def answer_phonenum(message: types.Message, state: FSMContext):
    phonenum = message.contact.phone_number
    async with state.proxy() as data:
        data["phonenum"] = phonenum

    await message.answer("üè´ –í –∫–∞–∫–æ–º —Ñ–∏–ª–∏–∞–ª–µ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?", reply_markup=branch_key_ru)
    await WorkerData_ru.next()

@dp.message_handler(state=WorkerData_ru.branch_name)
async def worker_branch(message: Message, state: FSMContext):
    branch_name = message.text
    await state.update_data(
        {"branch_name": branch_name}
    )
    await message.answer("üë®üèª‚Äçüíº –ù–∞ –∫–∞–∫–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å?", reply_markup=position_key_ru)
    await WorkerData_ru.next()

@dp.message_handler(state=WorkerData_ru.position)
async def worker_position(message: Message, state: FSMContext):
    position = message.text
    await state.update_data(
        {"position": position}
    )

    await message.answer("üè´ –í –∫–∞–∫–æ–º —Ñ–∏–ª–∏–∞–ª–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å?", reply_markup=branch_key_ru)
    await WorkerData_ru.next()

@dp.message_handler(state=WorkerData_ru.new_branch)
async def worker_newbranch(message: Message, state: FSMContext):
    new_branch = message.text
    await state.update_data(
        {"new_branch": new_branch}
    )

    await message.answer("üë®üèª‚Äçüíº –ù–∞ –∫–∞–∫–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ —Ç—ã —Ö–æ—á–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å?", reply_markup=position_key_ru)
    await WorkerData_ru.next()

@dp.message_handler(state=WorkerData_ru.new_position)
async def worker_newposition(message: Message, state: FSMContext):
    new_position = message.text
    await state.update_data(
        {"new_position": new_position}
    )
    await message.answer('‚ÅâÔ∏è–ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å –≤–µ—Ç–≤—å –∏–ª–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å?', reply_markup=back_key_ru)
    await WorkerData_ru.next()

@dp.message_handler(state=WorkerData_ru.cause)
async def worker_cause(message: Message, state: FSMContext):
    cause = message.text
    await state.update_data(
        {"cause": cause}
    )
    await message.answer('‚úÖ –ö–∞–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –≤—ã –¥–µ–ª–∞–µ—Ç–µ, –∫–æ–≥–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ –Ω–æ–≤—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å –∏–ª–∏ —Ñ–∏–ª–∏–∞–ª?',reply_markup=back_key_ru)
    await WorkerData_ru.next()
@dp.message_handler(state=WorkerData_ru.news)
async def worker_news(message: Message, state: FSMContext):
    news = message.text
    await state.update_data(
        {"news": news}
    )
    await message.answer('<b>üßæ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤–µ—Ä–Ω–∞</b>', reply_markup=menu)
    await WorkerData_ru.next()



    data = await state.get_data()
    name = data.get("name")
    birth_date = data.get('birth_date')
    phonenum = data.get('phonenum')
    branch_name = data.get('branch_name')
    position = data.get('position')
    new_branch = data.get('new_branch')
    new_position = data.get('new_position')
    cause = data.get('cause')
    news = data.get('news')

    msg = "<b>–ë—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n"
    msg += f"<b>üë§ –§.–ò.O:</b> -<code> {name}</code>\n"
    msg += f"<b>üìÜ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> -<code> {birth_date}</code>\n"
    msg += f"<b>üìû–¢–µ–ª–µ—Ñ–æ–Ω:</b> -<code> {phonenum}</code>\n"
    msg += f"<b>üè´ –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–µ–Ω–∏—è:</b> -<code> {branch_name}</code>\n"
    msg += f"<b>üß∞ –ü–æ–∑–∏—Ü–∏—è:</b> -<code> {position}</code>\n"
    msg += f"<b>üè´ –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏:</b> -<code> {new_branch}</code>\n"
    msg += f"<b>üß∞ –ù–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b> -<code>{new_position}</code>\n"
    msg += f"<b>‚ÅâÔ∏è–ü—Ä–∏—á–∏–Ω–∞:</b> -<code>{cause}</code>\n"
    msg += f"<b>‚úÖ –ù–æ–≤–æ—Å—Ç–∏:</b> -<code>{news}</code>\n"


    await message.answer(msg, reply_markup=confirmation_keyboard_ru)

    await WorkerData_ru.next()

@dp.callback_query_handler(post_callback.filter(action="post"))
async def approve_post(call: CallbackQuery):
    await call.answer("–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!", show_alert=True)
    message = await call.message.edit_reply_markup()
    target_channel = CHANNELS[0]
    await message.send_copy(target_channel)


@dp.callback_query_handler(post_callback.filter(action="cancel"))
async def cancel_post(call: CallbackQuery, state: FSMContext):
    await call.answer("–í—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É!", show_alert=True)
    await call.message.edit_reply_markup()
    await call.message.answer("–ó–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")


@dp.message_handler(state=WorkerData_ru.confirm)
async def post_unknown(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ!")

